name: Build and Deploy to EKS

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: 954976299895.dkr.ecr.us-east-1.amazonaws.com/webdev77
  EKS_CLUSTER: arn:aws:ecs:us-east-1:954976299895:cluster/webdev77
  KUBE_NAMESPACE: default

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      run: |
        docker build -t ${{ env.ECR_REPOSITORY }}:${{ github.sha }} .
        docker tag ${{ env.ECR_REPOSITORY }}:${{ github.sha }} ${{ env.ECR_REPOSITORY }}:latest
        docker push ${{ env.ECR_REPOSITORY }}:${{ github.sha }}
        docker push ${{ env.ECR_REPOSITORY }}:latest
        echo "image=${{ env.ECR_REPOSITORY }}:${{ github.sha }}" >> $GITHUB_OUTPUT

    - name: Install kubectl
      uses: azure/setup-kubectl@v3

    - name: Configure kubectl for EKS
      run: |
        aws eks --region ${{ env.AWS_REGION }} update-kubeconfig --name ${{ env.EKS_CLUSTER }}

    - name: Deploy to EKS
      run: |
        kubectl config set-context --current --namespace=${{ env.KUBE_NAMESPACE }}
        kubectl apply -f k8s/configmap.yaml
        kubectl apply -f k8s/secret.yaml
        kubectl set image deployment/symfony-app symfony=${{ steps.build-image.outputs.image }} --record
        kubectl apply -f k8s/service.yaml
        kubectl rollout status deployment/symfony-app